my_dict = {}


def step(n):
    global my_dict, k_max
    # каждую итерацию заяц сного может прыгать на макс кол-во ступеней

    # первым делом проверяем была ли данная ситуация общитана до этого:
    # не обязательно, просто оптимизация
    if my_dict.get(n):
        return my_dict.get(n)

    # если прыгать не куда, возвращаем 1 - вариант дойти до конца найден
    if n == 0:
        return 1

    # результирующая переменная куда вернем ответ:
    my_sum = 0
    # заяц не может прыгнуть дальше оставшихся ступенек:
    # ограничиваем его макс длину прыжка
    new_k = min(k_max, n)
    # пробегаем по всем вариантам прыжков
    for i in range(new_k + 1)[1::]:
        # отнимаем количесвто ступенек на которое прыгнули и считаем тоже самое из остатка
        # складываем полученные варианты + 1 шаг
        my_sum += step(n - i)

    # общитав, заносим под результат в базу
    my_dict.update({n: my_sum})
    return my_sum


f_input = open('input.txt', 'r')
f_output = open("output.txt", 'w')

k_max, n_total = map(int, ((f_input.read()).split(" ")))
f_output.write(str(step(n_total)))